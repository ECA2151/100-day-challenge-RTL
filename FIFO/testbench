module fifo_tb();
    reg clk, rst, we, re;
    reg [7:0] data_in;
    wire empty, full;
    wire [7:0] data_out;

    // Instantiate the FIFO
    fifo dut (
        .clk(clk),
        .rst(rst),
        .we(we),
        .re(re),
        .data_in(data_in),
        .empty(empty),
        .full(full),
        .data_out(data_out)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 10 time unit clock period
    end

    // Test procedure
    initial begin
        // Initialize signals
        rst = 1;
        we = 0;
        re = 0;
        data_in = 8'b0;

        // Reset the FIFO
        #10 rst = 0;

        // Write a single data value to the FIFO
        @(posedge clk);
        data_in = 8'hA5; // Example data
        we = 1; // Enable write
        @(posedge clk);
        we = 0; // Disable write

        // Read data from the FIFO
        @(posedge clk);
        re = 1; // Enable read
        @(posedge clk);
        re = 0; // Disable read

        // Display the read data
        $display("Read data: %h", data_out); // Display the output

        // End simulation
        $finish;
    end
endmodule
